AWSTemplateFormatVersion: 2010-09-09
Description: >-
  WSO2 Open Banking deployment
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Basic Configuration
        Parameters:
          - AWSAccessKeyId
          - AWSAccessKeySecret
          - KeyPairName
          - WSO2InstanceType
          - CertificateName
          - DBUsername
          - DBPassword
          - WUMUsername
          - WUMPassword
      - Label:
          default: Advanced Configuration
        Parameters:
          - OperatingSystem
          - ProductVersion
          - DB
          - DBAllocationStorage
          - DBInstanceType
          - CustomUserData
          - JDK
          - InternalPrepareForTest
          - ElasticSearchEndpoint
          - ElasticSearchRegion
          - DeploymentSpec
    ParameterLabels:
      AWSAccessKeyId:
        default: AWS Access Key ID
      AWSAccessKeySecret:
        default: AWS Access Secret Key
      OperatingSystem:
        default: Operating System
      CertificateName:
        default: SSL Certificate Name
      KeyPairName:
        default: Key Pair Name
      DBUsername:
        default: DB Username
      DBPassword:
        default: DB Password
      DBAllocationStorage:
        default: Allocation Storage
      DBInstanceType:
        default: DB Instance Type
      JDK:
        default: JDK
      InternalPrepareForTest:
        default: Enable Test Mode
      CustomUserData:
        default: Customer User Data
      WUMUsername:
        default: WSO2 Username
      WUMPassword:
        default: WSO2 Password
      WSO2InstanceType:
        default: Instance Type
      DB:
        default: Database
      ProductVersion:
        default: OB Version
      ElasticSearchEndpoint:
        default: ElasticSearch Endpoint
      ElasticSearchRegion:
        default: ElasticSearch Region
      DeploymentSpec:
        default: Deployment Specification
Parameters:
  AWSAccessKeyId:
    Type: String
  AWSAccessKeySecret:
    Type: String
  KeyPairName:
    Description: >-
      The private key used to log in to instances through SSH
    Type: 'AWS::EC2::KeyPair::KeyName'
  CertificateName:
    Description: A valid SSL certificate used for HTTPS
    Type: String
    MinLength: 1
  WSO2InstanceType:
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
    ConstraintDescription: Must be a valid EC2 instance type
  CustomUserData:
    Type: String
    Default: "echo"
  JDK:
    Type: String
    Default: "OPEN_JDK8"
    AllowedValues:
      - "OPEN_JDK8"
      - "CORRETTO_JDK8"
  ProductVersion:
    Type: String
    Default: 1.3.0
    AllowedValues:
      - 1.3.0
  WUMPassword:
    Type: String
    Default: ""
    NoEcho: true
  WUMUsername:
    Type: String
    Default: ""
  DBUsername:
    Type: String
    MinLength: 4
    AllowedPattern: '[A-Za-z0-9\-]+'
  DBPassword:
    Type: String
    MinLength: 8
    NoEcho: true
  DBAllocationStorage:
    Description: Provide storage size in Gigabytes
    Type: Number
    Default: 20
  ElasticSearchEndpoint:
    Type: String
    Default: ""
  OperatingSystem:
    Type: String
    Default: Ubuntu1804
    AllowedValues:
     - Ubuntu1804
     - CentOS7
     - SUSE12
  DBInstanceType:
    Description: If the selected DB Engine is "SQL Server", please use "db.m4.large" as instance type
    Type: String
    Default: db.t2.medium
    AllowedValues:
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
  DB:
    Type: String
    Default: MySQL-5.7
    AllowedValues:
      - MySQL-5.6
      - MySQL-5.7
      - Postgres-9.4.12
      - Postgres-9.6
      - Postgres-10.5
      - Oracle-SE1-11.2
      - Oracle-SE2-12.1
      - SQLServer-SE-13.00
      - SQLServer-SE-14.00
  InternalPrepareForTest:
    Type: String
    Default: "False"
    AllowedValues:
      - "False"
      - "True"
  ElasticSearchRegion:
    Type: String
    Default: "us-east-1"
    AllowedValues:
      - "us-east-1"
      - "us-east-2"
      - "us-west-1"
      - "us-west-2"
      - "ap-southeast-2"
      - "eu-west-1"
  DeploymentSpec:
    Type: String
    Default: "STET"
    AllowedValues:
      - "STET"
      - "BERLIN"
      - "UK"
Resources:
  # networking configurations
  WSO2OBVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
  WSO2OBPublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref WSO2OBVPC
      CidrBlock: 10.0.254.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
  WSO2OBPublicSubnet2:
      Type: 'AWS::EC2::Subnet'
      Properties:
        VpcId: !Ref WSO2OBVPC
        CidrBlock: 10.0.252.0/24
        AvailabilityZone: !Select
          - '1'
          - !GetAZs ''
  WSO2OBPublicInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
  WSO2OBPublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WSO2OBVPC
  WSO2OBPublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2OBPublicRouteTable
      SubnetId: !Ref WSO2OBPublicSubnet1
  WSO2OBPublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2OBPublicRouteTable
      SubnetId: !Ref WSO2OBPublicSubnet2
  WSO2OBPublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref WSO2OBPublicRouteTable
      GatewayId: !Ref WSO2OBPublicInternetGateway
      DestinationCidrBlock: 0.0.0.0/0
    DependsOn: WSO2OBVPCInternetGatewayAttachment
  WSO2OBVPCInternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref WSO2OBPublicInternetGateway
      VpcId: !Ref WSO2OBVPC
  WSO2OBPrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref WSO2OBVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
  WSO2OBPrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref WSO2OBVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
  WSO2OBPrivateSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WSO2OBVPC
  WSO2OBPrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref WSO2OBNATGateway
      RouteTableId: !Ref WSO2OBPrivateSubnetRouteTable
  WSO2OBPrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2OBPrivateSubnetRouteTable
      SubnetId: !Ref WSO2OBPrivateSubnet1
  WSO2OBPrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2OBPrivateSubnetRouteTable
      SubnetId: !Ref WSO2OBPrivateSubnet2
  WSO2OBNATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt
        - WSO2OBEIP
        - AllocationId
      SubnetId: !Ref WSO2OBPublicSubnet1
  WSO2BastionEIPAssociation:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: !GetAtt WSO2BastionEIP.AllocationId
      InstanceId: !Ref WSO2BastionInstance
  WSO2OBEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  WSO2BastionEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  # database configurations
  WSO2OBDBInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2OBVPC
      GroupDescription: DB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '1521'
          ToPort: '1521'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '1433'
          ToPort: '1433'
          CidrIp: 0.0.0.0/0
  WSO2OBDBInstance:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Delete
    Properties:
      VPCSecurityGroups:
        - !Ref WSO2OBDBInstanceSecurityGroup
      DBInstanceClass: !Ref DBInstanceType
      AllocatedStorage: !Ref DBAllocationStorage
      BackupRetentionPeriod: '0'
      DBInstanceIdentifier: WSO2OBDBInstance
      DBName: !If [UseSQLServerDB, "", WSO2OBDB]
      LicenseModel: !If [UseLicensedVersion, license-included, !Ref 'AWS::NoValue']
      EngineVersion: !Select [1, !Split ["_", !FindInMap [ DBEngineMap, !Ref DB, DBEngine]]]
      Engine: !Select [0, !Split ["_", !FindInMap [ DBEngineMap, !Ref DB, DBEngine]]]
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      MultiAZ: 'false'
      StorageType: gp2
      DBSubnetGroupName: !Ref WSO2OBDBSubnetGroup
  WSO2OBDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: DB Subnet Group
      SubnetIds:
        - !Ref WSO2OBPrivateSubnet1
        - !Ref WSO2OBPrivateSubnet2
  # Product configurations
  BastionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2OBVPC
      GroupDescription: WSO2 Open Banking Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  WSO2OBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2OBVPC
      GroupDescription: WSO2 Open Banking Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8280'
          ToPort: '8280'
          SourceSecurityGroupId: !Ref WSO2OBLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          SourceSecurityGroupId: !Ref WSO2OBLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9446'
          ToPort: '9446'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8243'
          ToPort: '8243'
          SourceSecurityGroupId: !Ref WSO2OBLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '5672'
          ToPort: '5672'
          SourceSecurityGroupId: !Ref WSO2OBLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '8140'
          ToPort: '8140'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '4000'
          ToPort: '4000'
          CidrIp: 0.0.0.0/0
  WSO2BastionInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !FindInMap
        - WSO2OBAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu1804
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      Monitoring: 'false'
      Tags:
        - Key: Name
          Value: WSO2BastionInstance
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref WSO2OBPublicSubnet1
          GroupSet:
            - !Ref BastionSecurityGroup
  PuppetMaster:
    Type: 'AWS::EC2::Instance'
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT30M
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !FindInMap
        - WSO2PuppetMasterRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu1804
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '50'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      Monitoring: 'false'
      Tags:
        - Key: Name
          Value: PuppetMasterInstance
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref WSO2OBPrivateSubnet1
          GroupSet:
            - !Ref PuppetMasterSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
            - 'export PATH=~/.local/bin:$PATH'
            - apt-get update
            - apt-get -y install python-setuptools python-pip
            - pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            - echo "> Set hostname to puppetmaster"
            - hostname puppetmaster
            - echo $(hostname) >> /etc/hostname
            - echo "127.0.0.1 $(hostname)" >> /etc/hosts
            - !Join
              - ''
              - - sed -i "s/access-key/
                - !Ref AWSAccessKeyId
                - /g" /usr/lib/logstash-6.5.1/logstash-PUPPETMASTER.conf
            - !Join
              - ''
              - - sed -i "s/REGION_NAME/
                - !Ref ElasticSearchRegion
                - /g" /usr/lib/logstash-6.5.1/logstash-PUPPETMASTER.conf
            - !Join
              - ''
              - - sed -i "s^secret-key^
                - !Ref AWSAccessKeySecret
                - ^g" /usr/lib/logstash-6.5.1/logstash-PUPPETMASTER.conf
            - !Join
              - ''
              - - sed -i "s^STACK_NAME^
                - !Ref AWS::StackName
                - ^g" /usr/lib/logstash-6.5.1/logstash-PUPPETMASTER.conf
            - !Join
              - ''
              - - sed -i "s^ELASTICSEARCH_ENDPOINT^
                - !Ref ElasticSearchEndpoint
                - ^g" /usr/lib/logstash-6.5.1/logstash-PUPPETMASTER.conf
            - export INSTANCEID=$(ec2metadata | grep -m 1 'instance-id:' | awk '{print $2}')
            - sed -i "s/INSTANCE_ID/$INSTANCEID/g" /usr/lib/logstash-6.5.1/logstash-PUPPETMASTER.conf
            - apt-get update
            - apt install openjdk-8-jre-headless -y
            - nohup /usr/lib/logstash-6.5.1/bin/logstash -f /usr/lib/logstash-6.5.1/logstash-PUPPETMASTER.conf & >> /home/ubuntu/elastic.log
            - sed -i '/\[main\]/a dns_alt_names=puppetmaster,puppet' /etc/puppet/puppet.conf
            - sed -i '/\[master\]/a autosign=true' /etc/puppet/puppet.conf
            - !Join
              - ''
              - - export ProductVersion=
                - !Ref ProductVersion
            - service puppetmaster restart
            - !Sub "/home/ubuntu/wso2-init.sh '${WUMUsername}' '${WUMPassword}' wso2-obam-${ProductVersion} ${InternalPrepareForTest}"
            - !Sub "/home/ubuntu/wso2-init.sh '${WUMUsername}' '${WUMPassword}' wso2-obkm-${ProductVersion} ${InternalPrepareForTest}"
            - !Sub "/usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource PuppetMaster --region ${AWS::Region}"
            - !Join
              - ''
              - - sed -i "s/access-key/
                - !Ref AWSAccessKeyId
                - /g" /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/REGION_NAME/
                - !Ref "AWS::Region"
                - /g" /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s^secretkey^
                - !Ref AWSAccessKeySecret
                - ^g" /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_OBAM_HOSTNAME/
                - !GetAtt
                  - WSO2OBLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_OBKM_HOSTNAME/
                - !GetAtt
                  - WSO2OBLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_OBKM_HOSTNAME/
                - !GetAtt
                  - WSO2OBLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_OBAM_HOSTNAME/
                - !GetAtt
                  - WSO2OBLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_DBMS/
                - !Select [0, !Split ["_", !FindInMap [ DBEngineMap, !Ref DB, DBEngine]]]
                - /g" /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_RDS_URL/
                - !GetAtt
                  - WSO2OBDBInstance
                  - Endpoint.Address
                - /g" /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_DEPLOYED_SPEC/
                - !Ref DeploymentSpec
                - /g" /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_DEPLOYED_SPEC/
                - !Ref DeploymentSpec
                - /g" /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/access-key/
                - !Ref AWSAccessKeyId
                - /g" /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/REGION_NAME/
                - !Ref "AWS::Region"
                - /g" /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s^secretkey^
                - !Ref AWSAccessKeySecret
                - ^g" /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_ELB_DNS_NAME/
                - !GetAtt
                  - WSO2OBLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_DBMS/
                - !Select [0, !Split ["_", !FindInMap [ DBEngineMap, !Ref DB, DBEngine]]]
                - /g" /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_RDS_URL/
                - !GetAtt
                  - WSO2OBDBInstance
                  - Endpoint.Address
                - /g" /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - export DB_HOSTNAME=
                - !GetAtt
                  - WSO2OBDBInstance
                  - Endpoint.Address
            - !Join
              - ''
              - - export DB_PORT=
                - !GetAtt
                  - WSO2OBDBInstance
                  - Endpoint.Port
            - !Join
              - ''
              - - export DB_USERNAME=
                - !Ref DBUsername
            - !Join
              - ''
              - - export DB_PASSWORD=
                - !Ref DBPassword
            - !Join
             - ''
             - - sed -i "s/JDK_TYPE/
               - !Ref JDK
               - /g" /etc/puppet/code/environments/production/modules/obam${ProductVersion//.}/manifests/params.pp
            - !Join
             - ''
             - - sed -i "s/JDK_TYPE/
               - !Ref JDK
               - /g" /etc/puppet/code/environments/production/modules/obkm${ProductVersion//.}/manifests/params.pp
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /usr/local/bin/provision_db_ob.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /usr/local/bin/provision_db_ob.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_HOST/
                - !GetAtt
                  - WSO2OBDBInstance
                  - Endpoint.Address
                - /g" /usr/local/bin/provision_db_ob.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PORT/
                - !GetAtt
                  - WSO2OBDBInstance
                  - Endpoint.Port
                - /g" /usr/local/bin/provision_db_ob.sh
            - !Join
              - ''
              - - sed -i "s/CF_DBMS_NAME/
                - !Select [0, !Split ["_", !FindInMap [ DBEngineMap, !Ref DB, DBEngine]]]
                - /g" /usr/local/bin/provision_db_ob.sh
            - !Join
              - ''
              - - sed -i "s/CF_DBMS_VERSION/
                - !Select [1, !Split ["_", !FindInMap [ DBEngineMap, !Ref DB, DBEngine]]]
                - /g" /usr/local/bin/provision_db_ob.sh
            - !Join
              - ''
              - - sed -i "s/CF_PRODUCT_VERSION/
                - 1.3.0
                - /g" /usr/local/bin/provision_db_ob.sh
            - bash /usr/local/bin/provision_db_ob.sh
  PuppetMasterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2OBVPC
      GroupDescription: WSO2 Open Banking Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8140'
          ToPort: '8140'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 9200
          ToPort: 9200
          CidrIp: 0.0.0.0/0
##### APIM NODE #####
  WSO2OBNode1LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2OBAMIRegionMap
        - !Ref 'AWS::Region'
        - !Ref OperatingSystem
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2OBSecurityGroup
      UserData: !Base64
        'Fn::Sub': |
          Content-Type: multipart/mixed; boundary="//"
          MIME-Version: 1.0

          --//
          Content-Type: text/cloud-config; charset="us-ascii"
          MIME-Version: 1.0
          Content-Transfer-Encoding: 7bit
          Content-Disposition: attachment; filename="cloud-config.txt"

          #cloud-config
          cloud_final_modules:
          - [scripts-user, always]

          --//
          Content-Type: text/x-shellscript; charset="us-ascii"
          MIME-Version: 1.0
          Content-Transfer-Encoding: 7bit
          Content-Disposition: attachment; filename="userdata.txt"

          #!/bin/bash
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          export PATH=~/.local/bin:$PATH
          if [[ ${OperatingSystem} == "Ubuntu1804" ]]; then
              export DEBIAN_FRONTEND=noninteractive
              apt-get update
              apt install -y puppet nfs-common
              apt install -y python-pip
              apt-get -y install python3-pip
              sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
          fi
          if [[ ${OperatingSystem} == "CentOS7" ]]; then
              yum install -y epel-release zip unzip nfs-utils
              yum install -y python-pip
              yum install -y python3-pip
              rpm -Uvh https://yum.puppetlabs.com/puppet5/puppet5-release-el-7.noarch.rpm
              yum install -y puppet-agent
              echo $'[main]\nserver = puppet\ncertname = agent1\nenvironment = production\n\runinterval = 1h' > /etc/puppetlabs/puppet/puppet.conf
          fi
          if [[ ${OperatingSystem} == "SUSE12" ]]; then
              zypper install -y zip unzip
              zypper in -y java-1_8_0-openjdk
              zypper install nfs-client
              zypper install -y python-pip
              zypper install -y python3-pip
              zypper install -y puppet-agent
              echo $'[main]\nserver = puppet\ncertname = agent1\nenvironment = production\n\runinterval = 1h' > /etc/puppetlabs/puppet/puppet.conf
          fi
          pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
          pip3 install boto3
          sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
          wget https://s3.amazonaws.com/wso2logarchiever/log_archiver/log_archiver.sh
          wget --no-check-certificate --no-proxy 'http://wso2-cloudformation-templates.s3.amazonaws.com/private_ip_extractor.py' -P /usr/local/bin/
          mv log_archiver.sh /usr/lib/
          export ProductVersion=2.6.0
          sed -i "s/Product_Version/2.6.0/g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          sed -i "s^secret-key^${AWSAccessKeySecret}^g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          sed -i "s/access-key/${AWSAccessKeyId}/g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          sed -i "s^ELASTICSEARCH_ENDPOINT^${ElasticSearchEndpoint}^g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          export INSTANCEID=$(wget -q -O - http://169.254.169.254/latest/meta-data/instance-id)
          sed -i "s/INSTANCE_ID/$INSTANCEID/g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          sed -i "s/STACK_NAME/${AWS::StackName}/g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          sed -i "s/REGION_NAME/${ElasticSearchRegion}/g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          nohup /usr/lib/logstash-6.5.1/bin/logstash -f /usr/lib/logstash-6.5.1/logstash-OB.conf &
          export PuppetmasterIP=${PuppetMaster.PrivateIp}
          echo "$PuppetmasterIP puppet puppetmaster" >> /etc/hosts
          service puppet restart
          sleep 100
          export FACTER_profile=obam130
          if [[ ${OperatingSystem} == "Ubuntu1804" ]]; then
              puppet agent -vt >> /var/log/puppetlog.log
          fi
          if [[ ${OperatingSystem} == "CentOS7" ]]; then
              /opt/puppetlabs/bin/puppet agent -vt >> /var/log/puppetlog.log
          fi
          if [[ ${OperatingSystem} == "SUSE12" ]]; then
              /opt/puppetlabs/puppet/bin/puppet agent -vt >> /var/log/puppetlog.log
          fi
          wget --no-check-certificate --no-proxy 'https://testgrid-resources.s3.amazonaws.com/ob-dep-resources/AM_client-truststore.jks' && mv -f AM_client-truststore.jks /usr/lib/wso2/wso2obam/1.3.0/wso2-obam-1.3.0/repository/resources/security/client-truststore.jks
          sleep 30
          /usr/lib/wso2/wso2obam/1.3.0/wso2-obam-1.3.0/bin/wso2server.sh -Dsetup start
          ${CustomUserData}
          sleep 30
          if [[ ${OperatingSystem} == "Ubuntu1804" ]]; then
              end=$((SECONDS+1200))
              while [ $SECONDS -lt $end ] ; do
                  sleep 10
                  wget --delete-after --server-response --no-check-certificate "https://localhost:9443/carbon/admin/login.jsp"
                  if [ $? -eq "0" ] ; then
                      /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WSO2OBNode1AutoScalingGroup --region ${AWS::Region}
                      break
                  fi
              done
          fi
          if [[ ${OperatingSystem} == "CentOS7" ]]; then
              end=$((SECONDS+1200))
              while [ $SECONDS -lt $end ] ; do
                  sleep 10
                  wget --delete-after --server-response --no-check-certificate "https://localhost:9443/carbon/admin/login.jsp"
                  if [ $? -eq "0" ] ; then
                      /usr/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WSO2OBNode1AutoScalingGroup --region ${AWS::Region}
                      break
                  fi
              done
          fi
          if [[ ${OperatingSystem} == "SUSE12" ]]; then
              end=$((SECONDS+1200))
              while [ $SECONDS -lt $end ] ; do
                  sleep 10
                  wget --delete-after --server-response --no-check-certificate "https://localhost:9443/carbon/admin/login.jsp"
                  if [ $? -eq "0" ] ; then
                      /usr/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WSO2OBNode1AutoScalingGroup --region ${AWS::Region}
                      break
                  fi
              done
          fi
          service puppet stop
          echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
          cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2OBSecurityGroup
      - WSO2OBLoadBalancer
      - WSO2OBVPCInternetGatewayAttachment
      - PuppetMaster
      - WSO2OBNode2AutoScalingGroup
  WSO2OBNode1AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2OBNode1LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      TargetGroupARNs:
        - !Ref WSO2OBALBTargetGroup
        - !Ref WSO2OBALB8243TargetGroup
      VPCZoneIdentifier:
        - !Ref WSO2OBPrivateSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-OBInstance1"
          PropagateAtLaunch: 'true'
        - Key: cluster
          Value: ob
          PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT30M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '2'
        MinInstancesInService: '1'
        PauseTime: PT10M
        SuspendProcesses:
          - AlarmNotification
        WaitOnResourceSignals: true
    DependsOn:
      - WSO2OBLoadBalancer
##### KEY MANAGER NODE #####
  WSO2OBNode2LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2OBAMIRegionMap
        - !Ref 'AWS::Region'
        - !Ref OperatingSystem
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2OBSecurityGroup
      UserData: !Base64
        'Fn::Sub': |
          Content-Type: multipart/mixed; boundary="//"
          MIME-Version: 1.0

          --//
          Content-Type: text/cloud-config; charset="us-ascii"
          MIME-Version: 1.0
          Content-Transfer-Encoding: 7bit
          Content-Disposition: attachment; filename="cloud-config.txt"

          #cloud-config
          cloud_final_modules:
          - [scripts-user, always]

          --//
          Content-Type: text/x-shellscript; charset="us-ascii"
          MIME-Version: 1.0
          Content-Transfer-Encoding: 7bit
          Content-Disposition: attachment; filename="userdata.txt"

          #!/bin/bash
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          export PATH=~/.local/bin:$PATH
          if [[ ${OperatingSystem} == "Ubuntu1804" ]]; then
              export DEBIAN_FRONTEND=noninteractive
              apt-get update
              apt install -y puppet nfs-common
              apt install -y python-pip
              sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
          fi
          if [[ ${OperatingSystem} == "CentOS7" ]]; then
              yum install -y epel-release zip unzip nfs-utils
              yum install -y python-pip
              rpm -Uvh https://yum.puppetlabs.com/puppet5/puppet5-release-el-7.noarch.rpm
              yum install -y puppet-agent
              echo $'[main]\nserver = puppet\ncertname = agent2\nenvironment = production\n\runinterval = 1h' > /etc/puppetlabs/puppet/puppet.conf
          fi
          if [[ ${OperatingSystem} == "SUSE12" ]]; then
              zypper install -y zip unzip
              zypper in -y java-1_8_0-openjdk
              zypper install nfs-client
              zypper install -y python-pip
              zypper install -y puppet-agent
              echo $'[main]\nserver = puppet\ncertname = agent2\nenvironment = production\n\runinterval = 1h' > /etc/puppetlabs/puppet/puppet.conf
          fi
          pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
          sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
          wget https://s3.amazonaws.com/wso2logarchiever/log_archiver/log_archiver.sh
          mv log_archiver.sh /usr/lib/
          export ProductVersion=2.6.0
          sed -i "s/Product_Version/2.6.0/g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          sed -i "s^secret-key^${AWSAccessKeySecret}^g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          sed -i "s/access-key/${AWSAccessKeyId}/g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          sed -i "s^ELASTICSEARCH_ENDPOINT^${ElasticSearchEndpoint}^g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          export INSTANCEID=$(wget -q -O - http://169.254.169.254/latest/meta-data/instance-id)
          sed -i "s/INSTANCE_ID/$INSTANCEID/g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          sed -i "s/STACK_NAME/${AWS::StackName}/g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          sed -i "s/REGION_NAME/${ElasticSearchRegion}/g" /usr/lib/logstash-6.5.1/logstash-OB.conf
          nohup /usr/lib/logstash-6.5.1/bin/logstash -f /usr/lib/logstash-6.5.1/logstash-OB.conf &
          export PuppetmasterIP=${PuppetMaster.PrivateIp}
          echo "$PuppetmasterIP puppet puppetmaster" >> /etc/hosts
          service puppet restart
          sleep 300
          export FACTER_profile=obkm130
          if [[ ${OperatingSystem} == "Ubuntu1804" ]]; then
              puppet agent -vt >> /var/log/puppetlog.log
          fi
          if [[ ${OperatingSystem} == "CentOS7" ]]; then
              /opt/puppetlabs/bin/puppet agent -vt >> /var/log/puppetlog.log
          fi
          if [[ ${OperatingSystem} == "SUSE12" ]]; then
              /opt/puppetlabs/puppet/bin/puppet agent -vt >> /var/log/puppetlog.log
          fi
          sleep 30
          wget --no-check-certificate --no-proxy 'https://testgrid-resources.s3.amazonaws.com/ob-dep-resources/KM_client-truststore.jks' && mv -f KM_client-truststore.jks /usr/lib/wso2/wso2obkm/1.3.0/wso2-obkm-1.3.0/repository/resources/security/client-truststore.jks
          /usr/lib/wso2/wso2obkm/1.3.0/wso2-obkm-1.3.0/bin/wso2server.sh -Dsetup start
          ${CustomUserData}
          sleep 30
          if [[ ${OperatingSystem} == "Ubuntu1804" ]]; then
              end=$((SECONDS+1200))
              while [ $SECONDS -lt $end ] ; do
                  sleep 10
                  wget --delete-after --server-response --no-check-certificate "https://localhost:9446/carbon/admin/login.jsp"
                  if [ $? -eq "0" ] ; then
                      /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WSO2OBNode2AutoScalingGroup --region ${AWS::Region}
                      break
                  fi
              done
          fi
          if [[ ${OperatingSystem} == "CentOS7" ]]; then
              end=$((SECONDS+1200))
              while [ $SECONDS -lt $end ] ; do
                  sleep 10
                  wget --delete-after --server-response --no-check-certificate "https://localhost:9446/carbon/admin/login.jsp"
                  if [ $? -eq "0" ] ; then
                      /usr/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WSO2OBNode2AutoScalingGroup --region ${AWS::Region}
                      break
                  fi
              done
          fi
          if [[ ${OperatingSystem} == "SUSE12" ]]; then
              end=$((SECONDS+1200))
              while [ $SECONDS -lt $end ] ; do
                  sleep 10
                  wget --delete-after --server-response --no-check-certificate "https://localhost:9446/carbon/admin/login.jsp"
                  if [ $? -eq "0" ] ; then
                      /usr/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WSO2OBNode2AutoScalingGroup --region ${AWS::Region}
                      break
                  fi
              done
          fi
          service puppet stop
          echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
          cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2OBSecurityGroup
      - WSO2OBLoadBalancer
      - WSO2OBVPCInternetGatewayAttachment
      - PuppetMaster
  WSO2OBNode2AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2OBNode2LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      TargetGroupARNs:
        - !Ref WSO2OBKMALBTargetGroup
      VPCZoneIdentifier:
        - !Ref WSO2OBPrivateSubnet2
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-OBInstance2"
          PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT30M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '2'
        MinInstancesInService: '1'
        PauseTime: PT10M
        SuspendProcesses:
          - AlarmNotification
        WaitOnResourceSignals: true
    DependsOn:
      - WSO2OBLoadBalancer
  WSO2OBLoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2OBVPC
      GroupDescription: WSO2 OB ELB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9446'
          ToPort: '9446'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8243'
          ToPort: '8243'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8280'
          ToPort: '8280'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '4000'
          ToPort: '4000'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9446'
          ToPort: '9446'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8243'
          ToPort: '8243'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8280'
          ToPort: '8280'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '4000'
          ToPort: '4000'
          CidrIp: 0.0.0.0/0
  WSO2OBLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: OB
      Scheme: internet-facing
      Subnets:
        - !Ref WSO2OBPublicSubnet1
        - !Ref WSO2OBPublicSubnet2
      SecurityGroups:
        - !Ref WSO2OBLoadBalancerSecurityGroup
  WSO2OBALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      HealthCheckPath: /carbon/admin/login.jsp
      HealthCheckPort: 9443
      Matcher:
        HttpCode: 200
      Name: ob-carbon-9443
      Port: 9443
      Protocol: HTTPS
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      - Key: stickiness.enabled
        Value: 'true'
      UnhealthyThresholdCount: 3
      VpcId:
        Ref: WSO2OBVPC
      Tags:
      - Key: Name
        Value: ob
  WSO2OBKMALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      HealthCheckPath: /carbon/admin/login.jsp
      HealthCheckPort: 9446
      Matcher:
        HttpCode: 200
      Name: ob-carbon-9446
      Port: 9446
      Protocol: HTTPS
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      - Key: stickiness.enabled
        Value: 'true'
      UnhealthyThresholdCount: 3
      VpcId:
        Ref: WSO2OBVPC
      Tags:
      - Key: Name
        Value: ob
  WSO2OBALB8243TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      HealthCheckPath: /services/Version
      HealthCheckPort: 8243
      Matcher:
        HttpCode: 200
      Name: ob-carbon-8243
      Port: 8243
      Protocol: HTTPS
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      - Key: stickiness.enabled
        Value: 'true'
      UnhealthyThresholdCount: 3
      VpcId:
        Ref: WSO2OBVPC
      Tags:
      - Key: Name
        Value: ob
  WSO2OBALB443Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WSO2OBALBTargetGroup
      Certificates:
        - CertificateArn: !Join
          - ''
          - - 'arn:aws:iam::'
            - !Ref 'AWS::AccountId'
            - ':server-certificate'
            - /
            - !Ref CertificateName
      LoadBalancerArn: !Ref WSO2OBLoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-1-2017-01
    DependsOn:
      - WSO2OBLoadBalancerSecurityGroup
  WSO2OBALB9446Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WSO2OBKMALBTargetGroup
      Certificates:
        - CertificateArn: !Join
          - ''
          - - 'arn:aws:iam::'
            - !Ref 'AWS::AccountId'
            - ':server-certificate'
            - /
            - !Ref CertificateName
      LoadBalancerArn: !Ref WSO2OBLoadBalancer
      Port: 9446
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-1-2017-01
    DependsOn:
      - WSO2OBLoadBalancerSecurityGroup
  WSO2OBALB8243Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WSO2OBALB8243TargetGroup
      Certificates:
        - CertificateArn: !Join
          - ''
          - - 'arn:aws:iam::'
            - !Ref 'AWS::AccountId'
            - ':server-certificate'
            - /
            - !Ref CertificateName
      LoadBalancerArn: !Ref WSO2OBLoadBalancer
      Port: 8243
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-1-2017-01
    DependsOn:
      - WSO2OBLoadBalancerSecurityGroup
  WSO2OBALB9443Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WSO2OBALBTargetGroup
      Certificates:
        - CertificateArn: !Join
          - ''
          - - 'arn:aws:iam::'
            - !Ref 'AWS::AccountId'
            - ':server-certificate'
            - /
            - !Ref CertificateName
      LoadBalancerArn: !Ref WSO2OBLoadBalancer
      Port: 9443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-1-2017-01
    DependsOn:
      - WSO2OBLoadBalancerSecurityGroup
Outputs:
  CarbonServerUrl:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
        - '/services/'
    Description: OB service carbon URL
  MgtConsoleUrl:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
        - '/carbon'
    Description: OB service carbon URL
  PublisherUrl:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
        - '/publisher'
    Description: OB service publisher URL
  StoreUrl:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
        - '/store'
    Description: OB service store URL
  AdminUrl:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
        - '/admin'
    Description: OB service admin URL
  KeyManagerUrl:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
        - ':9446/services/'
    Description: OB keymanager service admin URL
  KeyManagerCarbonUrl:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
        - ':9446/carbon/'
    Description: OB keymanager carbon URL
  GatewayHttpsUrl:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
        - ':8243'
    Description: OB HTTPS Gateway endpoint
  GatewayHttpUrl:
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
        - ':8280'
    Description: OB HTTP Gateway endpoint
  ApimHostname:
    Value: !Join
      - ''
      - - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
    Description: OB APIM Hostname
  KmHostname:
    Value: !Join
      - ''
      - - !GetAtt
          - WSO2OBLoadBalancer
          - DNSName
    Description: OB KM Hostname
Mappings:
  WSO2PuppetMasterRegionMap:
    ap-southeast-2:
       Ubuntu1804: ami-00a227c6757c5deab
    eu-west-1:
       Ubuntu1804: ami-01ede9cf5682c13eb
    us-east-1:
       Ubuntu1804: ami-087017fc14045c203
    us-east-2:
       Ubuntu1804: ami-0032cc13f9a978562
    us-west-1:
       Ubuntu1804: ami-0a508da7114cb907a
    us-west-2:
       Ubuntu1804: ami-09c2541d4cff5f4c8
  WSO2OBAMIRegionMap:
    ap-southeast-2:
      CentOS7: ami-0211f0ecd0e693937
      Ubuntu1804: ami-0fc37bfc486b80d6d
      SUSE12: ami-0f281af274607fc16
    eu-west-1:
      CentOS7: ami-08137d567f9e9413e
      Ubuntu1804: ami-005de30fe41bbe8f3
      SUSE12: ami-0811824bbed67b55c
    us-east-1:
      CentOS7: ami-09d4e63ccc46083c7
      Ubuntu1804: ami-02a2048d0e4afcd10
      SUSE12: ami-07a06c97eca8c1faf
    us-east-2:
      CentOS7: ami-009ac95229cc07041
      Ubuntu1804: ami-0a1af21a7b34de8f7
      SUSE12: ami-0af0962fc8331524b
    us-west-1:
      CentOS7: ami-0062ecf9cd0c8417d
      Ubuntu1804: ami-02cfec9ab1330bcbb
      SUSE12: ami-000cdd8eca5eac9a3
    us-west-2:
      CentOS7: ami-0cbe0a37066de0538
      Ubuntu1804: ami-0cc3da810abe655e0
      SUSE12: ami-0582cbca8b393fd62
  DBEngineMap:
    MySQL-5.7:
      DBEngine: "mysql_5.7"
    MySQL-5.6:
      DBEngine: "mysql_5.6"
    Postgres-9.4.12:
      DBEngine: "postgres_9.4.12"
    Postgres-9.6:
      DBEngine: "postgres_9.6"
    Postgres-10.5:
      DBEngine: "postgres_10.5"
    SQLServer-SE-13.00:
      DBEngine: "sqlserver-se_13.00"
    SQLServer-SE-14.00:
      DBEngine: "sqlserver-se_14.00"
    Oracle-SE1-11.2:
      DBEngine: "oracle-se1_11.2"
    Oracle-SE2-12.1:
      DBEngine: "oracle-se2_12.1"
Conditions:
  UseSQLServerDB: !Equals [sqlserver-se, !Select [0, !Split ["_", !FindInMap [ DBEngineMap, !Ref DB, DBEngine]]]]
  UseLicensedVersion: !Or [ !Equals [sqlserver, !Select [0, !Split ["-", !FindInMap [ DBEngineMap, !Ref DB, DBEngine]]]], !Equals [oracle, !Select [0, !Split ["-", !FindInMap [ DBEngineMap, !Ref DB, DBEngine]]]] ]
